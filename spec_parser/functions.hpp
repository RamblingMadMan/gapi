#ifndef GAPI_FUNCTIONS_HPP
#define GAPI_FUNCTIONS_HPP 1

namespace gapi{
	gl_function<void(GLuint, GLuint)> glActiveShaderProgram{deferred_init};
	gl_function<void(GLenum)> glActiveTexture{deferred_init};
	gl_function<void(GLuint, GLuint)> glAttachShader{deferred_init};
	gl_function<void(GLuint, GLenum)> glBeginConditionalRender{deferred_init};
	gl_function<void(GLenum, GLuint)> glBeginQuery{deferred_init};
	gl_function<void(GLenum, GLuint, GLuint)> glBeginQueryIndexed{deferred_init};
	gl_function<void(GLenum)> glBeginTransformFeedback{deferred_init};
	gl_function<void(GLuint, GLuint, GLchar *)> glBindAttribLocation{deferred_init};
	gl_function<void(GLenum, GLuint)> glBindBuffer{deferred_init};
	gl_function<void(GLenum, GLuint, GLuint)> glBindBufferBase{deferred_init};
	gl_function<void(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr)> glBindBufferRange{deferred_init};
	gl_function<void(GLuint, GLuint, char *)> glBindFragDataLocation{deferred_init};
	gl_function<void(GLuint, GLuint, GLuint, char *)> glBindFragDataLocationIndexed{deferred_init};
	gl_function<void(GLenum, GLuint)> glBindFramebuffer{deferred_init};
	gl_function<void(GLuint)> glBindProgramPipeline{deferred_init};
	gl_function<void(GLenum, GLuint)> glBindRenderbuffer{deferred_init};
	gl_function<void(GLuint, GLuint)> glBindSampler{deferred_init};
	gl_function<void(GLenum, GLuint)> glBindTexture{deferred_init};
	gl_function<void(GLenum, GLuint)> glBindTransformFeedback{deferred_init};
	gl_function<void(GLuint)> glBindVertexArray{deferred_init};
	gl_function<void(GLclampf, GLclampf, GLclampf, GLclampf)> glBlendColor{deferred_init};
	gl_function<void(GLenum)> glBlendEquation{deferred_init};
	gl_function<void(GLenum, GLenum)> glBlendEquationSeparate{deferred_init};
	gl_function<void(GLenum, GLenum)> glBlendFunc{deferred_init};
	gl_function<void(GLenum, GLenum, GLenum, GLenum)> glBlendFuncSeparate{deferred_init};
	gl_function<void(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum)> glBlitFramebuffer{deferred_init};
	gl_function<void(GLenum, GLsizeiptr, GLvoid *, GLenum)> glBufferData{deferred_init};
	gl_function<void(GLenum, GLintptr, GLsizeiptr, GLvoid *)> glBufferSubData{deferred_init};
	gl_function<GLenum(GLenum)> glCheckFramebufferStatus{deferred_init};
	gl_function<void(GLenum, GLenum)> glClampColor{deferred_init};
	gl_function<void(GLbitfield)> glClear{deferred_init};
	gl_function<void(GLenum, GLint, GLint *)> glClearBufferiv{deferred_init};
	gl_function<void(GLclampf, GLclampf, GLclampf, GLclampf)> glClearColor{deferred_init};
	gl_function<void(GLclampd)> glClearDepth{deferred_init};
	gl_function<void(GLint)> glClearStencil{deferred_init};
	gl_function<GLenum(GLsync, GLbitfield, GLuint64)> glClientWaitSync{deferred_init};
	gl_function<void(GLboolean, GLboolean, GLboolean, GLboolean)> glColorMask{deferred_init};
	gl_function<void(GLuint)> glCompileShader{deferred_init};
	gl_function<void(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, GLvoid *)> glCompressedTexImage1D{deferred_init};
	gl_function<void(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLvoid *)> glCompressedTexImage2D{deferred_init};
	gl_function<void(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, GLvoid *)> glCompressedTexImage3D{deferred_init};
	gl_function<void(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, GLvoid *)> glCompressedTexSubImage1D{deferred_init};
	gl_function<void(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, GLvoid *)> glCompressedTexSubImage2D{deferred_init};
	gl_function<void(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, GLvoid *)> glCompressedTexSubImage3D{deferred_init};
	gl_function<void(GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr)> glCopyBufferSubData{deferred_init};
	gl_function<void(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint)> glCopyTexImage1D{deferred_init};
	gl_function<void(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint)> glCopyTexImage2D{deferred_init};
	gl_function<void(GLenum, GLint, GLint, GLint, GLint, GLsizei)> glCopyTexSubImage1D{deferred_init};
	gl_function<void(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei)> glCopyTexSubImage2D{deferred_init};
	gl_function<void(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei)> glCopyTexSubImage3D{deferred_init};
	gl_function<GLuint()> glCreateProgram{deferred_init};
	gl_function<GLuint(GLenum)> glCreateShader{deferred_init};
	gl_function<GLuint(GLenum, GLsizei, char **)> glCreateShaderProgramv{deferred_init};
	gl_function<void(GLenum)> glCullFace{deferred_init};
	gl_function<void(GLsizei, GLuint *)> glDeleteBuffers{deferred_init};
	gl_function<void(GLsizei, GLuint *)> glDeleteFramebuffers{deferred_init};
	gl_function<void(GLuint)> glDeleteProgram{deferred_init};
	gl_function<void(GLsizei, GLuint *)> glDeleteProgramPipelines{deferred_init};
	gl_function<void(GLsizei, GLuint *)> glDeleteQueries{deferred_init};
	gl_function<void(GLsizei, GLuint *)> glDeleteRenderbuffers{deferred_init};
	gl_function<void(GLsizei, GLuint *)> glDeleteSamplers{deferred_init};
	gl_function<void(GLuint)> glDeleteShader{deferred_init};
	gl_function<void(GLsync)> glDeleteSync{deferred_init};
	gl_function<void(GLsizei, GLuint *)> glDeleteTextures{deferred_init};
	gl_function<void(GLsizei, GLuint *)> glDeleteTransformFeedbacks{deferred_init};
	gl_function<void(GLsizei, GLuint *)> glDeleteVertexArrays{deferred_init};
	gl_function<void(GLenum)> glDepthFunc{deferred_init};
	gl_function<void(GLboolean)> glDepthMask{deferred_init};
	gl_function<void(GLclampd, GLclampd)> glDepthRange{deferred_init};
	gl_function<void(GLuint, GLsizei, GLclampd *)> glDepthRangeArrayv{deferred_init};
	gl_function<void(GLuint, GLclampd, GLclampd)> glDepthRangeArrayv{deferred_init};
	gl_function<void(GLuint, GLuint)> glDetachShader{deferred_init};
	gl_function<void(GLenum, GLint, GLsizei)> glDrawArrays{deferred_init};
	gl_function<void(GLenum, void *)> glDrawArraysIndirect{deferred_init};
	gl_function<void(GLenum, GLint, GLsizei, GLsizei)> glDrawArraysInstanced{deferred_init};
	gl_function<void(GLenum)> glDrawBuffer{deferred_init};
	gl_function<void(GLsizei, GLenum *)> glDrawBuffers{deferred_init};
	gl_function<void(GLenum, GLsizei, GLenum, GLvoid *)> glDrawElements{deferred_init};
	gl_function<void(GLenum, GLsizei, GLenum, GLvoid *, GLint)> glDrawElementsBaseVertex{deferred_init};
	gl_function<void(GLenum, GLenum, void *)> glDrawElementsIndirect{deferred_init};
	gl_function<void(GLenum, GLsizei, GLenum, void *, GLsizei)> glDrawElementsInstanced{deferred_init};
	gl_function<void(GLenum, GLsizei, GLenum, GLvoid *, GLsizei, GLint)> glDrawElementsInstancedBaseVertex{deferred_init};
	gl_function<void(GLenum, GLuint, GLuint, GLsizei, GLenum, GLvoid *)> glDrawRangeElements{deferred_init};
	gl_function<void(GLenum, GLuint, GLuint, GLsizei, GLenum, GLvoid *, GLint)> glDrawRangeElementsBaseVertex{deferred_init};
	gl_function<void(GLenum, GLuint)> glDrawTransformFeedback{deferred_init};
	gl_function<void(GLenum, GLuint, GLuint)> glDrawTransformFeedbackStream{deferred_init};
	gl_function<void(GLenum)> glEnable{deferred_init};
	gl_function<void(GLuint)> glEnableVertexAttribArray{deferred_init};
	gl_function<GLsync(GLenum, GLbitfield)> glFenceSync{deferred_init};
	gl_function<void()> glFinish{deferred_init};
	gl_function<void()> glFlush{deferred_init};
	gl_function<GLsync(GLenum, GLintptr, GLsizeiptr)> glFlushMappedBufferRange{deferred_init};
	gl_function<GLsync(GLenum, GLenum, GLenum, GLuint)> glFramebufferRenderbuffer{deferred_init};
	gl_function<void(GLenum, GLenum, GLuint, GLint)> glFramebufferTexture{deferred_init};
	gl_function<void(GLenum, GLenum, GLuint, GLint, GLint)> glFramebufferTextureLayer{deferred_init};
	gl_function<void(GLenum)> glFrontFace{deferred_init};
	gl_function<void(GLsizei, GLuint *)> glGenBuffers{deferred_init};
	gl_function<void(GLsizei, GLuint *)> glGenFramebuffers{deferred_init};
	gl_function<void(GLsizei, GLuint *)> glGenProgramPipelines{deferred_init};
	gl_function<void(GLsizei, GLuint *)> glGenQueries{deferred_init};
	gl_function<void(GLsizei, GLuint *)> glGenRenderbuffers{deferred_init};
	gl_function<void(GLsizei, GLuint *)> glGenSamplers{deferred_init};
	gl_function<void(GLsizei, GLuint *)> glGenTextures{deferred_init};
	gl_function<void(GLsizei, GLuint *)> glGenTransformFeedbacks{deferred_init};
	gl_function<void(GLsizei, GLuint *)> glGenVertexArrays{deferred_init};
	gl_function<void(GLenum)> glGenerateMipmap{deferred_init};
	gl_function<void(GLenum, GLboolean *)> glGetBooleanv{deferred_init};
	gl_function<void(GLuint, GLuint, GLsizei, GLsizei *, GLint *, GLenum *, GLchar *)> glGetActiveAttrib{deferred_init};
	gl_function<void(GLuint, GLenum, GLuint, GLsizei, GLsizei *, GLchar *)> glGetActiveSubroutineName{deferred_init};
	gl_function<void(GLuint, GLenum, GLuint, GLenum, GLint *)> glGetActiveSubroutineUniformiv{deferred_init};
	gl_function<void(GLuint, GLenum, GLuint, GLsizei, GLsizei *, GLchar *)> glGetActiveSubroutineUniformName{deferred_init};
	gl_function<void(GLuint, GLuint, GLsizei, GLsizei *, GLint *, GLenum *, GLchar *)> glGetActiveUniform{deferred_init};
	gl_function<void(GLuint, GLuint, GLenum, GLint)> glGetActiveUniformBlockiv{deferred_init};
	gl_function<void(GLuint, GLuint, GLsizei, GLsizei *, GLchar *)> glGetActiveUniformBlockName{deferred_init};
	gl_function<void(GLuint, GLuint, GLsizei, GLsizei *, GLchar *)> glGetActiveUniformName{deferred_init};
	gl_function<void(GLuint, GLsizei, GLuint *, GLenum, GLint *)> glGetActiveUniformsiv{deferred_init};
	gl_function<void(GLuint, GLsizei, GLsizei *, GLuint *)> glGetAttachedShaders{deferred_init};
	gl_function<GLint(GLuint, GLchar *)> glGetAttribLocation{deferred_init};
	gl_function<void(GLenum, GLenum, GLint *)> glGetBufferParameteriv{deferred_init};
	gl_function<void(GLenum, GLenum, GLvoid **)> glGetBufferPointerv{deferred_init};
	gl_function<void(GLenum, GLintptr, GLsizeiptr, GLvoid *)> glGetBufferSubData{deferred_init};
	gl_function<void(GLenum, GLint, GLvoid *)> glGetCompressedTexImage{deferred_init};
	gl_function<GLenum()> glGetError{deferred_init};
	gl_function<GLint(GLuint, char *)> glGetFragDataIndex{deferred_init};
	gl_function<GLint(GLuint, char *)> glGetFragDataLocation{deferred_init};
	gl_function<void(GLenum, GLenum, GLenum, GLint *)> glGetFramebufferAttachmentParameter{deferred_init};
	gl_function<void(GLenum, GLuint, GLfloat *)> glGetMultisamplefv{deferred_init};
	gl_function<void(GLuint, GLenum, GLint *)> glGetProgramiv{deferred_init};
	gl_function<void(GLuint, GLsizei, GLsizei *, GLenum *, void *)> glGetProgramBinary{deferred_init};
	gl_function<void(GLuint, GLsizei, GLsizei *, GLchar *)> glGetProgramInfoLog{deferred_init};
	gl_function<void(GLuint, GLenum, GLint *)> glGetProgramPipelineiv{deferred_init};
	gl_function<void(GLuint, GLsizei, GLsizei *, GLchar *)> glGetProgramPipelineInfoLog{deferred_init};
	gl_function<void(GLuint, GLenum, GLenum, GLint *)> glGetProgramStageiv{deferred_init};
	gl_function<void(GLenum, GLuint, GLenum, GLint *)> glGetQueryIndexediv{deferred_init};
	gl_function<void(GLuint, GLenum, GLint *)> glGetQueryObjectiv{deferred_init};
	gl_function<void(GLenum, GLenum, GLint *)> glGetQueryiv{deferred_init};
	gl_function<void(GLenum, GLenum, GLint *)> glGetRenderbufferParameteriv{deferred_init};
	gl_function<void(GLuint, GLenum, GLfloat *)> glGetSamplerParameterfv{deferred_init};
	gl_function<void(GLuint, GLenum, GLint *)> glGetShaderiv{deferred_init};
	gl_function<void(GLuint, GLsizei, GLsizei *, GLchar *)> glGetShaderInfoLog{deferred_init};
	gl_function<void(GLenum, GLenum, GLint *, GLint *)> glGetShaderPrecisionFormat{deferred_init};
	gl_function<void(GLuint, GLsizei, GLsizei *, GLchar *)> glGetShaderSource{deferred_init};
	gl_function<GLubyte*(GLenum)> glGetString{deferred_init};
	gl_function<GLuint(GLuint, GLenum, GLchar *)> glGetSubroutineIndex{deferred_init};
	gl_function<GLint(GLuint, GLenum, GLchar *)> glGetSubroutineUniformLocation{deferred_init};
	gl_function<void(GLsync, GLenum, GLsizei, GLsizei *, GLint *)> glGetSynciv{deferred_init};
	gl_function<void(GLenum, GLint, GLenum, GLenum, GLvoid *)> glGetTexImage{deferred_init};
	gl_function<void(GLenum, GLint, GLenum, GLfloat *)> glGetTexLevelParameterfv{deferred_init};
	gl_function<void(GLenum, GLenum, GLfloat *)> glGetTexParameterfv{deferred_init};
	gl_function<void(GLuint, GLuint, GLsizei, GLsizei *, GLsizei, GLenum *, char *)> glGetTransformFeedbackVarying{deferred_init};
	gl_function<void(GLuint, GLint, GLfloat *)> glGetUniformfv{deferred_init};
	gl_function<GLuint(GLuint, GLchar *)> glGetUniformBlockIndex{deferred_init};
	gl_function<GLuint(GLuint, GLsizei, GLchar **, GLuint *)> glGetUniformIndices{deferred_init};
	gl_function<GLint(GLuint, GLchar *)> glGetUniformLocation{deferred_init};
	gl_function<void(GLenum, GLint, GLuint *)> glGetUniformSubroutineuiv{deferred_init};
	gl_function<void(GLuint, GLenum, GLdouble *)> glGetVertexAttribdv{deferred_init};
	gl_function<void(GLuint, GLenum, GLvoid **)> glGetVertexAttribPointerv{deferred_init};
	gl_function<void(GLenum, GLenum)> glHint{deferred_init};
	gl_function<GLboolean(GLuint)> glIsBuffer{deferred_init};
	gl_function<GLboolean(GLenum)> glIsEnabled{deferred_init};
	gl_function<GLboolean(GLuint)> glIsFramebuffer{deferred_init};
	gl_function<GLboolean(GLuint)> glIsProgram{deferred_init};
	gl_function<GLboolean(GLuint)> glIsProgramPipeline{deferred_init};
	gl_function<GLboolean(GLuint)> glIsQuery{deferred_init};
	gl_function<GLboolean(GLuint)> glIsRenderbuffer{deferred_init};
	gl_function<GLboolean(GLuint)> glIsSampler{deferred_init};
	gl_function<GLboolean(GLuint)> glIsShader{deferred_init};
	gl_function<GLboolean(GLsync)> glIsSync{deferred_init};
	gl_function<GLboolean(GLuint)> glIsTexture{deferred_init};
	gl_function<GLboolean(GLuint)> glIsTransformFeedback{deferred_init};
	gl_function<GLboolean(GLuint)> glIsVertexArray{deferred_init};
	gl_function<void(GLfloat)> glLineWidth{deferred_init};
	gl_function<void(GLuint)> glLinkProgram{deferred_init};
	gl_function<void(GLenum)> glLogicOp{deferred_init};
	gl_function<void *(GLenum, GLenum)> glMapBuffer{deferred_init};
	gl_function<void *(GLenum, GLintptr, GLsizeiptr, GLbitfield)> glMapBufferRange{deferred_init};
	gl_function<void(GLclampf)> glMinSampleShading{deferred_init};
	gl_function<void(GLenum, GLint *, GLsizei *, GLsizei)> glMultiDrawArrays{deferred_init};
	gl_function<void(GLenum, GLsizei *, GLenum, GLvoid **, GLsizei)> glMultiDrawElements{deferred_init};
	gl_function<void(GLenum, GLsizei *, GLenum, GLvoid **, GLsizei, GLint *)> glMultiDrawElementsBaseVertex{deferred_init};
	gl_function<void(GLenum, GLint)> glPatchParameteri{deferred_init};
	gl_function<void()> glPauseTransformFeedback{deferred_init};
	gl_function<void(GLenum, GLfloat)> glPixelStoref{deferred_init};
	gl_function<void(GLenum, GLfloat)> glPointParameterf{deferred_init};
	gl_function<void(GLfloat)> glPointSize{deferred_init};
	gl_function<void(GLenum, GLenum)> glPolygonMode{deferred_init};
	gl_function<void(GLfloat, GLfloat)> glPolygonOffset{deferred_init};
	gl_function<void(GLuint)> glPrimitiveRestartIndex{deferred_init};
	gl_function<void(GLuint, GLenum, void *, GLsizei)> glProgramBinary{deferred_init};
	gl_function<void(GLuint, GLenum, GLint)> glProgramParameteri{deferred_init};
	gl_function<void(GLuint, GLint, GLfloat)> glProgramUniform1f{deferred_init};
	gl_function<void(GLenum)> glProvokingVertex{deferred_init};
	gl_function<void(GLuint, GLenum)> glQueryCounter{deferred_init};
	gl_function<void(GLenum)> glReadBuffer{deferred_init};
	gl_function<void(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid *)> glReadPixels{deferred_init};
	gl_function<void()> glReleaseShaderCompiler{deferred_init};
	gl_function<void(GLenum, GLenum, GLsizei, GLsizei)> glRenderbufferStorage{deferred_init};
	gl_function<void(GLenum, GLsizei, GLenum, GLsizei, GLsizei)> glRenderbufferStorageMultisample{deferred_init};
	gl_function<void()> glResumeTransformFeedback{deferred_init};
	gl_function<void(GLclampf, GLboolean)> glSampleCoverage{deferred_init};
	gl_function<void(GLuint, GLbitfield)> glSampleMaski{deferred_init};
	gl_function<void(GLuint, GLenum, GLfloat)> glSamplerParameterf{deferred_init};
	gl_function<void(GLint, GLint, GLsizei, GLsizei)> glScissor{deferred_init};
	gl_function<void(GLuint, GLsizei, GLint *)> glScissorArrayv{deferred_init};
	gl_function<void(GLuint, GLint, GLint, GLsizei, GLsizei)> glScissorIndexed{deferred_init};
	gl_function<void(GLsizei, GLuint *, GLenum, void *, GLsizei)> glShaderBinary{deferred_init};
	gl_function<void(GLuint, GLsizei, GLchar **, GLint *)> glShaderSource{deferred_init};
	gl_function<void(GLenum, GLint, GLuint)> glStencilFunc{deferred_init};
	gl_function<void(GLenum, GLenum, GLint, GLuint)> glStencilFuncSeparate{deferred_init};
	gl_function<void(GLuint)> glStencilMask{deferred_init};
	gl_function<void(GLenum, GLuint)> glStencilMaskSeparate{deferred_init};
	gl_function<void(GLenum, GLenum, GLenum)> glStencilOp{deferred_init};
	gl_function<void(GLenum, GLenum, GLenum, GLenum)> glStencilOpSeparate{deferred_init};
	gl_function<void(GLenum, GLenum, GLuint)> glTexBuffer{deferred_init};
	gl_function<void(GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, GLvoid *)> glTexImage1D{deferred_init};
	gl_function<void(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid *)> glTexImage2D{deferred_init};
	gl_function<void(GLenum, GLsizei, GLint, GLsizei, GLsizei, GLboolean)> glTexImage2DMultisample{deferred_init};
	gl_function<void(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, GLvoid *)> glTexImage3D{deferred_init};
	gl_function<void(GLenum, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean)> glTexImage3DMultisample{deferred_init};
	gl_function<void(GLenum, GLenum, GLfloat)> glTexParameterf{deferred_init};
	gl_function<void(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, GLvoid *)> glTexSubImage1D{deferred_init};
	gl_function<void(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLvoid *)> glTexSubImage2D{deferred_init};
	gl_function<void(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLvoid *)> glTexSubImage3D{deferred_init};
	gl_function<void(GLuint, GLsizei, char **, GLenum)> glTransformFeedbackVaryings{deferred_init};
	gl_function<void(GLint, GLfloat)> glUniform1f{deferred_init};
	gl_function<void(GLuint, GLuint, GLuint)> glUniformBlockBinding{deferred_init};
	gl_function<void(GLenum, GLsizei, GLuint *)> glUniformSubroutinesuiv{deferred_init};
	gl_function<void(GLuint)> glUseProgram{deferred_init};
	gl_function<void(GLuint, GLbitfield, GLuint)> glUseProgramStages{deferred_init};
	gl_function<void(GLuint)> glValidateProgram{deferred_init};
	gl_function<void(GLuint)> glValidateProgramPipeline{deferred_init};
	gl_function<void(GLuint, GLfloat)> glVertexAttrib1f{deferred_init};
	gl_function<void(GLuint, GLuint)> glVertexAttribDivisor{deferred_init};
	gl_function<void(GLuint, GLint, GLenum, GLboolean, GLsizei, GLvoid *)> glVertexAttribPointer{deferred_init};
	gl_function<void(GLint, GLint, GLsizei, GLsizei)> glViewport{deferred_init};
	gl_function<void(GLuint, GLsizei, GLfloat *)> glViewportArrayv{deferred_init};
	gl_function<void(GLuint, GLfloat, GLfloat, GLfloat, GLfloat)> glViewportIndexedf{deferred_init};
	gl_function<void(GLsync, GLbitfield, GLuint64)> glWaitSync{deferred_init};
}

#undef FUNC

#endif // GAPI_FUNCTIONS_HPP
